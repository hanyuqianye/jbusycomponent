#summary How to setup an environment to build this project with maven
#labels Featured,Phase-Implementation

= JBusyComponent library integration into a maven project =
This project is hosted into the Sonatype OSS Maven repository that is synced with the Central Maven Repository. That means you don't need to configure any specific repository url for refer to this project.

 * Add in your *pom.xml* a dependency into JBusyComponent
{{{
<dependency>
    <groupId>org.divxdede</groupId>
    <artifactId>jbusycomponent</artifactId>
    <version>1.0.2</version>
</dependency> 
}}}

  * For manual download look at xxxxxxxxxxxxxxxxxxx

= Building from Maven =

 * Build the project: `mvn clean package`
 * Install the artifact in local repository: `mvn install`

= Create a release in the subversion repository =

 * In a shell (in windows, you need an Administrator privilegied Cmd)
 * `mvn clean release:prepare -Dusername=XXXXXX -Dpassword=XXXXXXX`
 * `mvn release:perform -Dusername=XXXXXX -Dpassword=XXXXXXX`
 * `mvn release:clean`

= Sonatype configuration for deploying artifacts =

For creating account and initialize repository, see the [http://nexus.sonatype.org/oss-repository-hosting.html Sonatype Repository hosting guide]

this *pom.xml*'s project describe sonatype repositories:
{{{
        <repository>
            <id>sonatype-nexus-staging</id>
            <name>Nexus Release Repository</name>
            <url>http://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
        <snapshotRepository>
            <id>sonatype-nexus-snapshots</id>
            <name>Sonatype Nexus Snapshots</name>
            <url>http://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
}}}

You muse edit you file *%MAVEN_HOME%/conf/settings.xml* with authentifaction informations to sonatype OSS repository:
{{{
<settings>
    <servers>
        <server>
            <id>sonatype-nexus-staging</id>
            <username>your_sonatype_login</username>
            <password>your_sonatype_passwd</password>
        </server>
        <server>
            <id>sonatype-nexus-snapshots</id>
            <username>your_sonatype_login</username>
            <password>your_sonatype_passwd</password>
        </server>
    </servers>
</settings>
}}}

= Deploying into Sonatype staging repository and release it =
{{{
mvn deploy
}}}

 * On sonatype, you must promote this staged artifact to release

= Some Maven ressources documentations =
 * aaaa
 * [http://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html Maven lifecycle]
 * [http://maven.apache.org/plugins/maven-compiler-plugin/ maven-compiler-plugin]
 * [http://maven.apache.org/plugins/maven-resources-plugin/ maven-resources-plugin]
 * [http://maven.apache.org/plugins/maven-source-plugin/ maven-source-plugin]
 * [http://maven.apache.org/plugins/maven-javadoc-plugin/ maven-javadoc-plugin]
 * [http://maven.apache.org/plugins/maven-assembly-plugin-2.2-beta-5/ maven-assembly-plugin]
 * [http://maven.riedelcastro.org/gcupload-maven-plugin/ gcupload-maven-plugin]
 * [http://blog.hikage.be/2010/04/13/introduction-plugin-release-sur-google-code/ blog pour faire une release sur google-code]