#summary How to setup an environment to build this project with maven
#labels Featured,Phase-Implementation

= Maven Repository consideration =
Since version 1.0.2, this project is hosted on *Sonatype OSS Repository* that receive staged artifacts. After a while theses artifacts can be promoted to release artifacts and synced with the *Maven Central Repository*

= Integration into a Maven project =
 * Add in your *pom.xml* a dependency into JBusyComponent:
{{{
<dependency>
    <groupId>org.divxdede</groupId>
    <artifactId>jbusycomponent</artifactId>
    <version>1.0.2</version>
</dependency> 
}}}

*Be careful* the groupId is moved from `com.google.code` to `org.divxdede`

 * For manual download look:
   # http://oss.sonatype.org/content/groups/public/org/divxdede/jbusycomponent 
   # http://oss.sonatype.org/content/groups/staging/org/divxdede/jbusycomponent for staging versions 

JBusyComponent artifacts are signed. the public key *100D95E6* can be found at http://pgp.mit.edu/

= Building this project =
You need 3 programs for building this project
 * Subversion that can be found http://www.open.collab.net/downloads/subversion/
 * Maven that can be downloaded http://maven.apache.org/download.html
 * GnuPG that can be downloaded http://www.gnupg.org/

You need to do some pre-configurations of theses tools:
 * `%MAVEN_HOME%/conf/settings.xml` for configure repository access (required for deploy)
 * GnuPG ring keys required for sign artifacts (and `$GNUPGHOME` environment variable)

The `settings.xml` must refer repository access like it:
{{{
<settings>
    <servers>
        <server>
            <id>sonatype-nexus-staging</id>
            <username>your_sonatype_login</username>
            <password>your_sonatype_passwd</password>
        </server>
        <server>
            <id>sonatype-nexus-snapshots</id>
            <username>your_sonatype_login</username>
            <password>your_sonatype_passwd</password>
        </server>
    </servers>
</settings>
}}}

After what, you can build this project following theses commands:
 * Build the project: `mvn clean package`
 * Install the artifact in local repository: `mvn install`

= Create a release in the scm =
 * In a shell (in windows, you need an Administrator privilegied Cmd)
 * `mvn clean release:prepare -Dusername=XXXXXX -Dpassword=XXXXXXX`
 * `mvn release:perform -Dusername=XXXXXX -Dpassword=XXXXXXX`
 * `mvn release:clean`

= Deploying staged artifacts =
 * `mvn clean deploy -Dgpg.passphrase=yourpassphrase`
 * Use the [http://oss.sonatype.org/index.html OSS Nexus repository] interface to promote an artifact

= Creating an account on Sonatype OSS repository =
See the [http://nexus.sonatype.org/oss-repository-hosting.html Sonatype Repository hosting guide]

Your *pom.xml*'s project must describe sonatype repositories:
{{{
        <repository>
            <id>sonatype-nexus-staging</id>
            <name>Nexus Release Repository</name>
            <url>http://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
        <snapshotRepository>
            <id>sonatype-nexus-snapshots</id>
            <name>Sonatype Nexus Snapshots</name>
            <url>http://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
}}}

 * On sonatype, you must promote this staged artifact to release

= Maven documentations resources =
 * [http://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html Maven lifecycle]
 * [http://maven.apache.org/plugins/maven-compiler-plugin/ maven-compiler-plugin]
 * [http://maven.apache.org/plugins/maven-resources-plugin/ maven-resources-plugin]
 * [http://maven.apache.org/plugins/maven-source-plugin/ maven-source-plugin]
 * [http://maven.apache.org/plugins/maven-javadoc-plugin/ maven-javadoc-plugin]
 * [http://www.sonatype.com/people/2010/01/how-to-generate-pgp-signatures-with-maven/ how to generate pgp signatures]